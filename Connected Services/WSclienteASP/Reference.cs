//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace clienteASP_para_el_WS.WSclienteASP {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WSclienteASP.WebService1Soap")]
    public interface WebService1Soap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Sumar", ReplyAction="*")]
        double Sumar(double nro1, double nro2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Sumar", ReplyAction="*")]
        System.Threading.Tasks.Task<double> SumarAsync(double nro1, double nro2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Resta", ReplyAction="*")]
        double Resta(double nro1, double nro2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Resta", ReplyAction="*")]
        System.Threading.Tasks.Task<double> RestaAsync(double nro1, double nro2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Multiplicacion", ReplyAction="*")]
        double Multiplicacion(double nro1, double nro2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Multiplicacion", ReplyAction="*")]
        System.Threading.Tasks.Task<double> MultiplicacionAsync(double nro1, double nro2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Division", ReplyAction="*")]
        double Division(double nro1, double nro2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Division", ReplyAction="*")]
        System.Threading.Tasks.Task<double> DivisionAsync(double nro1, double nro2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Fact", ReplyAction="*")]
        int Fact(int n);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Fact", ReplyAction="*")]
        System.Threading.Tasks.Task<int> FactAsync(int n);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Potencia", ReplyAction="*")]
        int Potencia(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Potencia", ReplyAction="*")]
        System.Threading.Tasks.Task<int> PotenciaAsync(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Seno", ReplyAction="*")]
        double Seno(double angulo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Seno", ReplyAction="*")]
        System.Threading.Tasks.Task<double> SenoAsync(double angulo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Tangente", ReplyAction="*")]
        double Tangente(double angulo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Tangente", ReplyAction="*")]
        System.Threading.Tasks.Task<double> TangenteAsync(double angulo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/inversa", ReplyAction="*")]
        double inversa(double numero);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/inversa", ReplyAction="*")]
        System.Threading.Tasks.Task<double> inversaAsync(double numero);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/raiz_cuadrada", ReplyAction="*")]
        double raiz_cuadrada(int numero);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/raiz_cuadrada", ReplyAction="*")]
        System.Threading.Tasks.Task<double> raiz_cuadradaAsync(int numero);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/raiz_n_esima", ReplyAction="*")]
        double raiz_n_esima(int numero, int raiz);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/raiz_n_esima", ReplyAction="*")]
        System.Threading.Tasks.Task<double> raiz_n_esimaAsync(int numero, int raiz);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebService1SoapChannel : clienteASP_para_el_WS.WSclienteASP.WebService1Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebService1SoapClient : System.ServiceModel.ClientBase<clienteASP_para_el_WS.WSclienteASP.WebService1Soap>, clienteASP_para_el_WS.WSclienteASP.WebService1Soap {
        
        public WebService1SoapClient() {
        }
        
        public WebService1SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebService1SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService1SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService1SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double Sumar(double nro1, double nro2) {
            return base.Channel.Sumar(nro1, nro2);
        }
        
        public System.Threading.Tasks.Task<double> SumarAsync(double nro1, double nro2) {
            return base.Channel.SumarAsync(nro1, nro2);
        }
        
        public double Resta(double nro1, double nro2) {
            return base.Channel.Resta(nro1, nro2);
        }
        
        public System.Threading.Tasks.Task<double> RestaAsync(double nro1, double nro2) {
            return base.Channel.RestaAsync(nro1, nro2);
        }
        
        public double Multiplicacion(double nro1, double nro2) {
            return base.Channel.Multiplicacion(nro1, nro2);
        }
        
        public System.Threading.Tasks.Task<double> MultiplicacionAsync(double nro1, double nro2) {
            return base.Channel.MultiplicacionAsync(nro1, nro2);
        }
        
        public double Division(double nro1, double nro2) {
            return base.Channel.Division(nro1, nro2);
        }
        
        public System.Threading.Tasks.Task<double> DivisionAsync(double nro1, double nro2) {
            return base.Channel.DivisionAsync(nro1, nro2);
        }
        
        public int Fact(int n) {
            return base.Channel.Fact(n);
        }
        
        public System.Threading.Tasks.Task<int> FactAsync(int n) {
            return base.Channel.FactAsync(n);
        }
        
        public int Potencia(int a, int b) {
            return base.Channel.Potencia(a, b);
        }
        
        public System.Threading.Tasks.Task<int> PotenciaAsync(int a, int b) {
            return base.Channel.PotenciaAsync(a, b);
        }
        
        public double Seno(double angulo) {
            return base.Channel.Seno(angulo);
        }
        
        public System.Threading.Tasks.Task<double> SenoAsync(double angulo) {
            return base.Channel.SenoAsync(angulo);
        }
        
        public double Tangente(double angulo) {
            return base.Channel.Tangente(angulo);
        }
        
        public System.Threading.Tasks.Task<double> TangenteAsync(double angulo) {
            return base.Channel.TangenteAsync(angulo);
        }
        
        public double inversa(double numero) {
            return base.Channel.inversa(numero);
        }
        
        public System.Threading.Tasks.Task<double> inversaAsync(double numero) {
            return base.Channel.inversaAsync(numero);
        }
        
        public double raiz_cuadrada(int numero) {
            return base.Channel.raiz_cuadrada(numero);
        }
        
        public System.Threading.Tasks.Task<double> raiz_cuadradaAsync(int numero) {
            return base.Channel.raiz_cuadradaAsync(numero);
        }
        
        public double raiz_n_esima(int numero, int raiz) {
            return base.Channel.raiz_n_esima(numero, raiz);
        }
        
        public System.Threading.Tasks.Task<double> raiz_n_esimaAsync(int numero, int raiz) {
            return base.Channel.raiz_n_esimaAsync(numero, raiz);
        }
    }
}
